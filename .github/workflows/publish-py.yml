# refer to: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

# WARNING: Do not change the name of this file, keep `publish-py.yml`.
# "trusted publishing" will check the name of the workflow file.

name: Publish Python üêç distribution üì¶ to PyPI

on:
  push:
    tags:
      # e.g., py/pyo3-utils/v0.1.0
      - py/*/v*
  workflow_dispatch:
    inputs:
      release_tag:
        description: Release tag
        required: true
        type: string

env:
  RELEASE_TAG: ${{ inputs.release_tag || github.ref }}

defaults:
  run:
    shell: bash

# NOTE: It's better not to use cache for release workflow.
jobs:
  build-dist:
    name: Build distribution üì¶
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # TODO, FIXME: 3.13t, need wait for <https://github.com/actions/setup-python/pull/973>
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        # Use the oldest possible system to compile extension wheels
        # (note: the system dependencies of tauri v2 requires at least Ubuntu 22.04)
        os:
          # NOTE: if edit linux os, remember to edit `if` statement in `setup-sys-deps` step.
          - ubuntu-22.04
          - ubuntu-22.04-arm
          - windows-2022
          # TODO, FIXME: <https://github.com/github/roadmap/issues/1098>
          # - windows-2022-arm
          - macos-13 # Intel
          - macos-14 # arm64
    outputs:
      package: ${{ steps.dry-run.outputs.package }}
    steps:
      - uses: actions/checkout@v4
      - name: setup-envs-ver
        id: setup-envs-ver
        uses: ./.github/actions/setup-envs-ver

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          # see: <https://docs.astral.sh/uv/guides/integration/github/>
          #
          # NOTE: For matrix jobs, we must set `python-version`,
          # otherwise `uv` may incorrectly use other Python versions cached in GitHub Actions.
          # See: <https://github.com/astral-sh/uv/pull/9454>.
          python-version: ${{ matrix.python-version }}
          version: ${{ steps.setup-envs-ver.outputs.uv }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # see: <https://github.com/dtolnay/rust-toolchain>
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      # needed for build tauri
      - name: setup-sys-deps
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        uses: ./.github/actions/setup-sys-deps

      - name: Build a binary wheel and a source tarball (e.g., dry-run)
        id: dry-run
        run: python ./release.py ${{ env.RELEASE_TAG }}

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/
          if-no-files-found: error

  publish-to-pypi:
    needs:
      - build-dist
    name: Publish Python üêç distribution üì¶ to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/${{ needs.build-dist.outputs.package }}
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          # see: <https://github.com/actions/upload-artifact/blob/v4.6.2/docs/MIGRATION.md#multiple-uploads-to-the-same-named-artifact>
          pattern: python-package-distributions-*
          path: dist/
          # `wheel` and `sdist` with the same name will be overwritten,
          # so it's ok for matrix jobs.
          merge-multiple: true
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    needs:
      - publish-to-pypi
    name: Create GitHub release üè∑Ô∏è
    runs-on: ubuntu-latest
    permissions:
      contents: write # IMPORTANT: mandatory for creating release
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          # see: <https://github.com/actions/upload-artifact/blob/v4.6.2/docs/MIGRATION.md#multiple-uploads-to-the-same-named-artifact>
          pattern: python-package-distributions-*
          path: dist/
          # `wheel` and `sdist` with the same name will be overwritten,
          # so it's ok for matrix jobs.
          merge-multiple: true
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          body: ${{ github.event.head_commit.message }}
          artifacts: dist/*.whl,dist/*.tar.gz
