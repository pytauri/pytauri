[project]
name = "pytauri-wheel"
version = "0.4.0" # ❗ when bumping, remember to update workspace dependencies
readme = "README.md"
license = "Apache-2.0"
authors = [
    { name = "Sean Wang", email = "126865849+WSH032@users.noreply.github.com" },
]
requires-python = ">=3.9"
description = "Precompiled wheels for pytauri"

# <https://iscinumpy.dev/post/bound-version-constraints/>
dependencies = [
    # ❗ workspaces, must use `==`
    "pytauri == 0.4.*", # NOTE: must keep the same version as crate `pytauri` in `Cargo.toml`
]

[project.urls]
# see: <https://packaging.python.org/en/latest/specifications/well-known-project-urls/#well-known-labels>
documentation = "https://pytauri.github.io/pytauri/"
source = "https://github.com/pytauri/pytauri"


[project.entry-points.pytauri]
# - "pytauri_wheel" -> `python/pytauri_wheel/`
# - "ext_mod" -> `#[pyo3(name = "ext_mod")]` in rust
ext_mod = "pytauri_wheel.ext_mod"

[build-system]
requires = [
    "setuptools>=61",
    "setuptools-rust==1.*",
    "setuptools_scm>=8",
    "packaging>=24",
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages]
find = { where = ["python"] }

# see: <https://www.maturin.rs/config>
[tool.maturin]
# the same as [tool.setuptools.packages.find.where]
python-source = "python"
# the same as `[project.entry-points.pytauri.ext_mod]`,
# i.e., `target` in `setup.py`
module-name = "pytauri_wheel.ext_mod"
# see `setup.py`
features = ["pyo3/extension-module", "tauri/custom-protocol"]
# equivalent to `setuptools_scm`
sdist-generator = "git"


[tool.uv.sources]
pytauri = { workspace = true }
